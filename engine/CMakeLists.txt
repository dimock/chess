cmake_minimum_required(VERSION 3.0)

# configurations
set(CMAKE_CONFIGURATION_TYPES "Debug;Release;Debug_Qt;Release_Qt")
set(CMAKE_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}" CACHE STRING "Reset the configurations to what we need" FORCE)
 
# Cxx-flags
set(CMAKE_CXX_FLAGS_DEBUG_QT "${CMAKE_CXX_FLAGS} /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1")
set(CMAKE_CXX_FLAGS_DEBUG_QT "${CMAKE_CXX_FLAGS_DEBUG_QT}" CACHE STRING "" FORCE)

set(CMAKE_CXX_FLAGS_RELEASE_QT "${CMAKE_CXX_FLAGS} /MD /O2 /Ob2 /D NDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE_QT "${CMAKE_CXX_FLAGS_RELEASE_QT}" CACHE STRING "" FORCE)

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} /D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}" CACHE STRING "" FORCE)

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} /GL /Oi /MT /Ox /Ob2 /Ot /D NDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}" CACHE STRING "" FORCE)

# C-flags
set(CMAKE_C_FLAGS_DEBUG_QT "${CMAKE_C_FLAGS} /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1")
set(CMAKE_C_FLAGS_DEBUG_QT "${CMAKE_C_FLAGS_DEBUG_QT}" CACHE STRING "" FORCE)

set(CMAKE_C_FLAGS_RELEASE_QT "${CMAKE_C_FLAGS} /MD /O2 /Ob2 /D NDEBUG")
set(CMAKE_C_FLAGS_RELEASE_QT "${CMAKE_C_FLAGS_RELEASE_QT}" CACHE STRING "" FORCE)

set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS} /D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}" CACHE STRING "" FORCE)

set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS} /GL /Oi /Ot /MT /Ox /Ob2 /D NDEBUG")
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}" CACHE STRING "" FORCE)

# project 
project(engine)

add_definitions(-D_SBCS)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories("${CMAKE_SOURCE_DIR}/include")

file(GLOB_RECURSE SOURCE_FILES source/*)
file(GLOB_RECURSE INCLUDE_FILES include/*)

add_library(engine STATIC ${SOURCE_FILES} ${INCLUDE_FILES})
#install(TARGETS engine DESTINATION "${CMAKE_SOURCE_DIR}/lib")
#target_link_libraries(dicom2stl  ${Glue}  ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${GDCM_LIBRARIES})
